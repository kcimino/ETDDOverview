---
title: | 
  ![](etddLogo.png){width=1in} ETDD Grant Writing Variable One Stop Shop
brand:
  color:
    palette:
      pale-green: "#adc9ba"
      light-green: "#70A086"
      blue: "#015a71 "
      dark-blue: "#70A086"
    background: pale-green
    foreground: blue
    primary: blue
  logo:
    small: etddLogo.png
    medium: etddLogo.png
  typography:
    fonts:
      - family: Poppins
        source: google
    base: Poppins
    headings: Poppins
format: 
  html:
    date-modified: 12/06/2024
    toc: true
    embed-resources: true
    css: oddHighlight.css
    grid: 
      margin-width: 300px
      body-width: 2000px
      sidebar-width: 100px
    other-links: 
      - text: Housing Data
        href: https://www.knoxvillechamber.com/eco/
      - text: State-level Economic Data
        href: https://haslam.utk.edu/publication/economic-report-to-the-governor-2024/
editor: source
execute: 
  cache: true
  echo: false
  warning: false
  message: false
---


```{r}

if (exists("startrun")) {
  print(fortunes::fortune())
} else {
  source(here::here("scripts", "startHere.R"))
}
acsdf <- read_csv(here::here('data','processed','etddAreaAcsVars.csv'))
blsdf <- read_csv(here::here("data","processed","blsData.csv"))

totaldf <- left_join(acsdf,blsdf, by=c("NAME"="place")) # do rbind or left join later

varsdf <- read_csv(here::here('data','processed','varsdf.csv'))

pctVars <- varsdf %>% 
  filter(str_detect(varName,'pct')) %>% 
  select(varName)  %>% 
  distinct() %>% 
  filter(!str_detect(varName,'Rate')) %>% 
  pull()
pctWholeVars <- 
   varsdf %>% 
  filter(str_detect(varName,'Rate')) %>% 
  select(varName)  %>% 
  distinct() %>% 
  pull()
```


# By Grant

:::{.panel-tabset}

## EPA

```{r}
epaVars <- varsdf %>% 
  filter(str_detect(grant,'EPA')) %>% 
  select(varName)  %>% 
  distinct() %>% 
  pull()

totaldf %>% 
  select(NAME,geography,any_of(epaVars)) %>% 
  mutate(geography=as.factor(geography),
         NAME=as.factor(NAME)) %>% 
  dplyr::rename(
    place=NAME
  ) %>%
  mutate(across(any_of(pctVars), ~ str_c(as.character(round((.x*100), digits=1)), '%'))) %>% 
  DT::datatable(
    filter="top",
    extensions = c('Buttons', 
     'FixedColumns',
     'FixedHeader'),
    options = list(
    dom = 'Bfrtip',
    buttons = c('copy', 'csv', 'excel', 'print'),

    scrollX = TRUE,
   fixedHeader=TRUE,
  initComplete = DT::JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#015a71', 'color': '#fff'});",
    # "$(this.api().table().body().odd()).css({'odd': '#015a71', 'color': '#015a71'});",
    "}")
    )
  )
# %>%
#   DT::formatPercentage(
#     columns=pctVars
#   )
#names()
# rename()
```


## ARC



```{r}
arcVars <- varsdf %>% 
  filter(str_detect(grant,'ARC')) %>% 
  select(varName)  %>% 
  distinct() %>% 
  pull()

totaldf %>% 
  select(NAME,geography,any_of(arcVars)) %>% 
  mutate(geography=as.factor(geography)) %>% 
  dplyr::rename(
    place=NAME
  ) %>% 
  mutate(across(any_of(pctVars), ~ 
                  str_c(
                    as.character(
                      round(
                        (ifelse(
                          str_detect(
                            .x,'Rate'),.x,.x*100
                          )
                         )
                        , digits=1)
                      )
                    , '%')
                )) %>% 
  mutate(across(any_of(pctWholeVars), ~ 
                  str_c(
                    as.character(
                      .x
                      )
                    , '%')
                )) %>% 

  DT::datatable(
    filter="top",
    extensions = c('Buttons', 
     'FixedColumns',
     'FixedHeader'),
    options = list(
    dom = 'Bfrtip',
    buttons = c('copy', 'csv', 'excel', 'print'),

    scrollX = TRUE,
   fixedHeader=TRUE,
  initComplete = DT::JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#015a71', 'color': '#fff'});",
    "}")
    )
  )
```


::::

# By Geography

:::{.panel-tabset}
## State

```{r}

totaldf %>% 
  filter(geography=='state') %>% 
  rename(
    'place'='NAME'
  ) %>% 
  mutate(across(any_of(pctVars), ~ 
                  str_c(
                    as.character(
                      round(
                        (ifelse(
                          str_detect(
                            .x,'Rate'),.x,.x*100
                          )
                         )
                        , digits=1)
                      )
                    , '%')
                )) %>% 
  mutate(across(any_of(pctWholeVars), ~ 
                  str_c(
                    as.character(
                      .x
                      )
                    , '%')
                )) %>%   DT::datatable(
    filter="top",
    extensions = c('Buttons', 
     'FixedColumns',
     'FixedHeader'),
    options = list(
    dom = 'Bfrtip',
    buttons = c('copy', 'csv', 'excel', 'print'),

    scrollX = TRUE,
   fixedHeader=TRUE,
  initComplete = DT::JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#015a71', 'color': '#fff'});",
    "}")
    )
  )
```


## County

```{r}

totaldf %>% 
  filter(geography=='county') %>% 
  rename(
    'place'='NAME'
  ) %>% 
  mutate(across(any_of(pctVars), ~ 
                  str_c(
                    as.character(
                      round(
                        (ifelse(
                          str_detect(
                            .x,'Rate'),.x,.x*100
                          )
                         )
                        , digits=1)
                      )
                    , '%')
                )) %>% 
  mutate(across(any_of(pctWholeVars), ~ 
                  str_c(
                    as.character(
                      .x
                      )
                    , '%')
                )) %>% 
  DT::datatable(
    filter="top",
    extensions = c('Buttons', 
     'FixedColumns',
     'FixedHeader'),
    options = list(
    dom = 'Bfrtip',
    buttons = c('copy', 'csv', 'excel', 'print'),

    scrollX = TRUE,
   fixedHeader=TRUE,
  initComplete = DT::JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#015a71', 'color': '#fff'});",
    "}")
    )
  )
```


## Place

```{r}
totaldf %>% 
  filter(geography=='place') %>% 
  rename(
    'place'='NAME'
  ) %>% 
  mutate(across(any_of(pctVars), ~ 
                  str_c(
                    as.character(
                      round(
                        (ifelse(
                          str_detect(
                            .x,'Rate'),.x,.x*100
                          )
                         )
                        , digits=1)
                      )
                    , '%')
                )) %>% 
  mutate(across(any_of(pctWholeVars), ~ 
                  str_c(
                    as.character(
                      .x
                      )
                    , '%')
                )) %>% 
  DT::datatable(
    filter="top",
    extensions = c('Buttons', 
     'FixedColumns',
     'FixedHeader'),
    options = list(
    dom = 'Bfrtip',
    buttons = c('copy', 'csv', 'excel', 'print'),

    scrollX = TRUE,
   fixedHeader=TRUE,
  initComplete = DT::JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#015a71', 'color': '#fff'});",
    "}")
    )
  )
```


::::


# All

```{r}
totaldf %>% 
  rename(
    'place'='NAME'
  ) %>% 
  mutate(geography=as.factor(geography)) %>% 
  mutate(across(any_of(pctVars), ~ 
                  str_c(
                    as.character(
                      round(
                        (ifelse(
                          str_detect(
                            .x,'Rate'),.x,.x*100
                          )
                         )
                        , digits=1)
                      )
                    , '%')
                )) %>% 
  mutate(across(any_of(pctWholeVars), ~ 
                  str_c(
                    as.character(
                      .x
                      )
                    , '%')
                )) %>% 
  DT::datatable(
    filter="top",
    extensions = c('Buttons', 
     'FixedColumns',
     'FixedHeader'),
    options = list(
    dom = 'Bfrtip',
    buttons = c('copy', 'csv', 'excel', 'print'),

    scrollX = TRUE,
   fixedHeader=TRUE,
  initComplete = DT::JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#015a71', 'color': '#fff'});",
    "}")
    )
  )
```



# Variable Guide

```{r}
varsdf %>% 
  mutate(category=as.factor(category)) %>% 
    mutate(across(any_of(pctVars), ~ str_c(as.character(round((.x*100), digits=1)), '%'))) %>% 
  DT::datatable(
    filter="top",
    extensions = c('Buttons', 
     'FixedColumns',
     'FixedHeader'),
    options = list(
    dom = 'Bfrtip',
    buttons = c('copy', 'csv', 'excel', 'print'),

    scrollX = TRUE,
   fixedHeader=TRUE,
  initComplete = DT::JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#015a71', 'color': '#fff'});",
    "}")
    )
  )
```

```{r}

```

